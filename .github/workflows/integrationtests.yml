name: Docker Compose Integration Test on PR

on:
  pull_request:
    branches:
      - main
      - feature/*

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the pull request code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker and Docker Compose
      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 3: Start Docker Compose
      - name: Start Docker Compose
        working-directory: src/backend
        run: docker-compose up -d

      # Step 4: Wait for services to be healthy
      - name: Wait for services to be healthy
        run: |
          echo "Waiting for services to be healthy..."
          docker-compose wait

      # Step 5: List all running containers
      - name: List all running containers
        run: docker ps

      # Step 6: Check Ollama server logs
      - name: Check Ollama server logs
        run: |
          container_id=$(docker ps -q --filter "ancestor=ollama/ollama:0.4.1")
          if [ -z "$container_id" ]; then
            echo "Error: Ollama server container not found."
            exit 1
          fi
          echo "Fetching logs for container: $container_id"
          docker logs "$container_id"

      # Step 7: Check Main Server Health
      - name: Check main server health
        run: |
          echo "Checking if the main server health endpoint is responding..."
          end=$((SECONDS+300)) # Wait up to 5 minutes
          while [ $SECONDS -lt $end ]; do
            response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/)  # Adjust the health endpoint as necessary
            if [ "$response" -eq 200 ]; then
              echo "Main server health is OK!"
              break
            fi
            echo "Waiting for main server health..."
            sleep 5
          done
          if [ "$response" -ne 200 ]; then
            echo "Error: Main server health check failed within 5 minutes. HTTP Status Code: $response"
            exit 1
          fi

      # Step 8: Check Main Server Logs
      - name: Check main server logs
        run: |
          container_id=$(docker ps -q --filter "ancestor=python:3.10-slim")  # Use the identified main server image name
          if [ -z "$container_id" ]; then
            echo "Error: Main server container not found."
            exit 1
          fi
          echo "Fetching logs for container: $container_id"
          docker logs "$container_id"

      # Step 9: Run Integration Tests
      - name: Run Python Integration Tests
        working-directory: ${{ github.workspace }}
        run: |
          python -m unittest discover -s ./test/IntegrationTests

      # Step 10: Shut Down Docker Compose
      - name: Docker-compose down
        working-directory: src/backend
        if: always()
        run: docker-compose down
